number alphas: 1
number_input_modes: 4
squeezing_option: False
[CSD] 0.0.1|DEBUG|2022-07-01 18:41:44]: Executing One Layer circuit with Backend: tf,  with measuring_type: probabilities 
batch_size:16 plays:1 modes:4 ancillas: 4 
steps: [100,150,300], l_rate: [0.1,0.01,0.01], cutoff_dim: [7,7,7] 
layers:1 squeezing: False
[CSD] 0.0.1|DEBUG|2022-07-01 18:41:44]: Optimizing for alpha: 0.34 with 1 codebooks.
[CSD] 0.0.1|DEBUG|2022-07-01 18:41:44]: current codebook: [[0.34375, 0.34375, 0.34375, 0.34375], [-0.34375, -0.34375, -0.34375, -0.34375]]
[CSD] 0.0.1|DEBUG|2022-07-01 18:41:45]: Optimizing for alpha: 0.34 
codebook_size:2 plays:1 modes:4 ancillas: 4 
 steps: [100,150,300], l_rate: [0.1,0.01,0.01], cutoff_dim: [7,7,7] 
layers:1 squeezing: False
[CSD] 0.0.1|INFO|2022-07-01 18:41:45]: number of parameters: 72
multiprocessing.pool.RemoteTraceback: 
"""
Traceback (most recent call last):
  File "/usr/lib/python3.10/multiprocessing/pool.py", line 125, in worker
    result = (True, func(*args, **kwds))
  File "/usr/lib/python3.10/multiprocessing/pool.py", line 48, in mapstar
    return list(map(*args))
  File "/home/iamtxena/sandbox/coherent-state-discrimination/examples/parallel_experiments_best_codebook.py", line 169, in uncurry_launch_execution
    return launch_execution(configuration=one_execution_configuration)
  File "/home/iamtxena/sandbox/coherent-state-discrimination/src/csd/utils/util.py", line 73, in wrap
    result = f(*args, **kw)
  File "/home/iamtxena/sandbox/coherent-state-discrimination/examples/parallel_experiments_best_codebook.py", line 139, in launch_execution
    return csd.execute(
  File "/home/iamtxena/sandbox/coherent-state-discrimination/src/csd/utils/util.py", line 73, in wrap
    result = f(*args, **kw)
  File "/home/iamtxena/sandbox/coherent-state-discrimination/src/csd/csd.py", line 595, in execute
    return self._train_and_test(
  File "/home/iamtxena/sandbox/coherent-state-discrimination/src/csd/csd.py", line 659, in _train_and_test
    one_codebook_optimization_result = self._train_for_one_alpha_one_codebook()
  File "/home/iamtxena/sandbox/coherent-state-discrimination/src/csd/utils/util.py", line 73, in wrap
    result = f(*args, **kw)
  File "/home/iamtxena/sandbox/coherent-state-discrimination/src/csd/csd.py", line 984, in _train_for_one_alpha_one_codebook
    optimization_result = self._optimization.optimize(
  File "/home/iamtxena/sandbox/coherent-state-discrimination/src/csd/optimize.py", line 50, in optimize
    return self._optimizer.optimize(cost_function=cost_function,
  File "/home/iamtxena/sandbox/coherent-state-discrimination/src/csd/optimizers/tf.py", line 61, in optimize
    loss, parameters, measurements = self._tf_optimize(cost_function=cost_function, parameters=parameters)
  File "/home/iamtxena/sandbox/coherent-state-discrimination/src/csd/optimizers/tf.py", line 122, in _tf_optimize
    loss, measurements = cost_function(params=parameters)
  File "/home/iamtxena/sandbox/coherent-state-discrimination/src/csd/csd.py", line 183, in _cost_function
    ).run_and_compute_average_batch_error_probability()
  File "/home/iamtxena/sandbox/coherent-state-discrimination/src/csd/cost_function.py", line 104, in run_and_compute_average_batch_error_probability
    codeword_guesses=self._run_and_get_codeword_guesses()
  File "/home/iamtxena/sandbox/coherent-state-discrimination/src/csd/cost_function.py", line 43, in _run_and_get_codeword_guesses
    return self._options.engine.run_tf_circuit_checking_measuring_type(
  File "/home/iamtxena/sandbox/coherent-state-discrimination/src/csd/tf_engine.py", line 23, in run_tf_circuit_checking_measuring_type
    self._run_tf_circuit_probabilities(circuit=circuit, options=options)
  File "/home/iamtxena/sandbox/coherent-state-discrimination/src/csd/tf_engine.py", line 51, in _run_tf_circuit_probabilities
    return self._compute_tf_fock_probabilities_for_all_codewords(
  File "/home/iamtxena/sandbox/coherent-state-discrimination/src/csd/tf_engine.py", line 58, in _compute_tf_fock_probabilities_for_all_codewords
    return [
  File "/home/iamtxena/sandbox/coherent-state-discrimination/src/csd/tf_engine.py", line 59, in <listcomp>
    self._compute_one_batch_codewords_success_probabilities(
  File "/home/iamtxena/sandbox/coherent-state-discrimination/src/csd/tf_engine.py", line 69, in _compute_one_batch_codewords_success_probabilities
    success_probabilities_all_outcomes = self._compute_success_probabilities_all_outcomes(
  File "/home/iamtxena/sandbox/coherent-state-discrimination/src/csd/tf_engine.py", line 93, in _compute_success_probabilities_all_outcomes
    return [
  File "/home/iamtxena/sandbox/coherent-state-discrimination/src/csd/tf_engine.py", line 94, in <listcomp>
    tf.reduce_sum(tf.math.multiply(measurement_matrix, self._all_fock_probs[index_input_batch]))
  File "/home/iamtxena/environments/csd/lib/python3.10/site-packages/tensorflow/python/util/traceback_utils.py", line 153, in error_handler
    raise e.with_traceback(filtered_tb) from None
  File "/home/iamtxena/environments/csd/lib/python3.10/site-packages/tensorflow/python/framework/ops.py", line 7164, in raise_from_not_ok_status
    raise core._status_to_exception(e) from None  # pylint: disable=protected-access
tensorflow.python.framework.errors_impl.UnimplementedError: Unhandled input dimensions 9 [Op:StridedSlice] name: strided_slice/
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/iamtxena/sandbox/coherent-state-discrimination/examples/parallel_experiments_best_codebook.py", line 398, in <module>
    multi_tf_backend(multiprocess_configuration=multiprocess_configuration)
  File "/home/iamtxena/sandbox/coherent-state-discrimination/examples/parallel_experiments_best_codebook.py", line 331, in multi_tf_backend
    _general_execution(
  File "/home/iamtxena/sandbox/coherent-state-discrimination/src/csd/utils/util.py", line 73, in wrap
    result = f(*args, **kw)
  File "/home/iamtxena/sandbox/coherent-state-discrimination/examples/parallel_experiments_best_codebook.py", line 263, in _general_execution
    ).get()
  File "/usr/lib/python3.10/multiprocessing/pool.py", line 771, in get
    raise self._value
tensorflow.python.framework.errors_impl.UnimplementedError: Unhandled input dimensions 9 [Op:StridedSlice] name: strided_slice/
